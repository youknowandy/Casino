# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestDemo():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def subTest1Text(self):
    self.driver.find_element(By.ID, "myTextInput").send_keys("MAPS is boring")
    value = self.driver.find_element(By.ID, "myTextInput").get_attribute("value")
    assert value == "MAPS is boring"
  
  def subTest2Color(self):
    self.driver.find_element(By.ID, "svgRect").click()
    attribute = self.driver.find_element(By.ID, "svgRect").get_attribute("fill")
    self.vars["color"] = attribute
    print("{}".format(self.vars["color"]))
  
  def subTest4Dropdown(self):
    dropdown = self.driver.find_element(By.ID, "mySelect")
    dropdown.find_element(By.XPATH, "//option[. = 'Set to 50%']").click()
    self.driver.find_element(By.CSS_SELECTOR, "option:nth-child(2)").click()
    attribute = self.driver.find_element(By.ID, "meterBar").get_attribute("value")
    self.vars["amountFilled"] = attribute
    print("{}".format(self.vars["amountFilled"]))
    assert(self.vars["amountFilled"] == 0.5)
  
  def test_demo(self):
    self.driver.get("https://seleniumbase.io/demo_page")
    self.driver.set_window_size(1012, 648)
    self.subTest1Text()
    self.subTest2Color()
    self.subTest4Dropdown()
  
